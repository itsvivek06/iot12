Q1----
1. To interface Seven segment with Arduino and write a program to display numbers form 0 to 9 in seven segment




int arr[10][7] = {
  //[a,b,c,d,e,f,g]
  {0, 0, 0, 0, 0, 0, 1},
  {1, 0, 0, 1, 1, 1, 1},
  {0, 0, 1, 0, 0, 1, 0},
  {0, 0, 0, 0, 1, 1, 0},
  {1, 0, 0, 1, 1, 0, 0},
  {0, 1, 0, 0, 1, 0, 0},
  {0, 1, 0, 0, 0, 0, 0},
  {0, 0, 0, 1, 1, 1, 1},
  {0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 1, 0, 0}
};
void setup() {
  pinMode(3, OUTPUT);
  pinMode(4, OUTPUT);
  pinMode(5, OUTPUT);
  pinMode(6, OUTPUT);
  pinMode(7, OUTPUT);
  pinMode(8, OUTPUT);
  pinMode(9, OUTPUT);
}
void counter(int n) {
  int  pin = 3;
  for (int i = 0; i < 7; i++) {
    digitalWrite(pin, arr[n][i]);
    pin++;
  }
}
void loop() {

  for (int i = 10; i > 0; i--) {
    delay(1000);
    counter(i - 1);
  }

}


2. To interface LCD with Arduino and write a program to Display your name on LCD.

#include <LiquidCrystal.h>

const int rs = 3, en = 4, d4 = 5, d5 = 6, d6 = 7, d7 = 8;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

void setup() {
  lcd.begin(16, 2);
}

void loop() {
  lcd.begin(0,0);
  lcd.print("PartyMonster");
}


3. write a program display your name on LCD and to perform marquee/scroll left and right effect on LCD. 



#include <LiquidCrystal.h>

const int rs = 3, en = 4, d4 = 5, d5 = 6, d6 = 7, d7 = 8;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

void setup() {
  lcd.begin(16, 2);
}

void loop() {
  lcd.begin(0, 0);
  lcd.print("PartyMonster");
  
  for (int i = 0; i < 16; i++) {
    lcd.scrollDisplayLeft();
    delay(1000);
  }

}



4. Take only 3 readings of ultrasonic sensor (after trigger) at the intervals of 2 seconds then stop taking further readings. Average the readings and find out if that number is palindrome number or not. And display the output in LCD.




#include <LiquidCrystal.h>

#define echoPin 8 
#define trigPin 7 
long dur; 
int dis;
const int rs = 13, en = 12, d4 = 11, d5 = 10, d6 = 9, d7 = 8;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

void setup() {
  pinMode(trigPin, OUTPUT); 
  pinMode(echoPin, INPUT); 
  Serial.begin(9600); 
  Serial.println("Ultrasonic Sensor HC-SR04 Test");
  Serial.println("with Arduino UNO R3");
  lcd.begin(16, 2);
  
  lcd.print("Ami Padsala");
  delay(1000);
  ultra();
  
}
void ultra(){
  int i=0,sum=0,avg=0,temp,rem,tot=0;
   for(i=0;i<3;i++){
  digitalWrite(trigPin, LOW);
  delay(2000);
  digitalWrite(trigPin, HIGH);
  delay(2000);
  digitalWrite(trigPin, LOW);
 
  dur = pulseIn(echoPin, HIGH);
  
  dis = dur * 0.034 / 2; 
  Serial.print("dis: ");
  Serial.print(dis);
  Serial.println(" cm");
  tot=tot+dis;
}
  avg=tot/3;
  Serial.println(avg);
  int n=avg;
  temp=avg;
  while(n>0)    
  {    
    rem=n%10;    
    sum=(sum*10)+rem;    
    n=n/10;    
  }    
  if(temp==sum)    
  {
    Serial.println("palindrome number ");   
    lcd.print("palindrome number"); 
  }
  else
  {    
    Serial.println("not palindrome"); 
    lcd.print("not palindrome number");   
  }
}




5. Connect ESP with Wifi and print the IP and MAC address of the device.


#include <WiFi.h>

const char* WIFI_NAME= "realme1";
const char* WIFI_PASSWORD = "12345678";

//WiFiServer server;
void setup() {
  // put your setup code here, to run once:
Serial.begin(9600);
Serial.println("Connecting to... ");
Serial.println(WIFI_NAME);
WiFi.begin(WIFI_NAME, WIFI_PASSWORD);
while (WiFi.status() != WL_CONNECTED)
 {
  delay(1000);
  Serial.print("Trying to connect to Wifi Network");
}
Serial.println("");
Serial.println("Successfully connected to WiFi network");
Serial.println("IP address: ");
Serial.println(WiFi.localIP());
Serial.println("MAC address: ");
Serial.println(WiFi.macAddress());

}

void loop() {
  // put your main code here, to run repeatedly:

}





6. Write a program to communicate client and server through API. 
Fetch the led status value from database through php API and ON/OFF the LED or ON/OFF the Buzzer as per status value in a Database. 



#include <Arduino.h>
#include <WiFi.h>
#include <WiFiMulti.h>
#include <HTTPClient.h>
WiFiMulti wifiMulti;
WiFiServer server;
void setup() {
pinMode(2, OUTPUT);
Serial.begin(9600);
Serial.println();
Serial.println();
Serial.println();
for (uint8_t t = 4; t > 0; t--) {
Serial.printf("[SETUP] WAIT %d...\n", t);
Serial.flush();
delay(1000);
}
wifiMulti.addAP("RP", "12345678");
wifiMulti.run();
if (wifiMulti.run() == WL_CONNECTED) {
Serial.println("");
Serial.println("WiFi connected");
Serial.println("IP address: ");
Serial.println(WiFi.localIP());
}
server.begin();
}
void loop() {
if ((wifiMulti.run() == WL_CONNECTED)) {
HTTPClient http;
Serial.print("[HTTP] begin...\n");
//HTTP // configure traged server and url
http.begin("https://iottest2022.000webhostapp.com/fetch.php?name=ledon");
Serial.print("[HTTP] GET...\n");
// start connection and send HTTP header
int httpCode = http.GET();
Serial.println("httpcode" + httpCode);
// httpCode will be negative on error
if (httpCode > 0) {
// HTTP header has been send and Server response header has been handled
Serial.printf("[HTTP] GET... code: %d\n", httpCode);
// file found at server
if (httpCode == HTTP_CODE_OK) {
String payload = http.getString();
Serial.println(payload);
if (payload == "1") {
digitalWrite(2, HIGH);
Serial.println("LED/Buzzer ON");
} else if (payload == "0") {
digitalWrite(2, LOW);
Serial.println("LED/Buzzer OFF");
}
}
} else {
Serial.printf("[HTTP] GET... failed, error: %s\n", http.errorToString(httpCode).c_str());
}
http.end();
}
delay(500);
}



7.Write a program to communicate client and server through API. 
Update the led /buzzer status value to database through php API as per LED/Buzzerâ€™s ON/OFF state.



#include <Arduino.h>
#include <WiFi.h>
#include <WiFiMulti.h>
#include <HTTPClient.h>
#define USE_SERIAL Serial
#define INPUT_PIN 4
#define LED_PIN 2
WiFiMulti wifiMulti;
String lastValue;
void setup() {
Serial.begin(115200);
pinMode(INPUT_PIN, INPUT_PULLUP);
pinMode(LED_PIN, OUTPUT);
for (uint8_t t = 4; t > 0; t--) {
Serial.printf("[SETUP] WAIT %d...\n", t);
Serial.flush();
delay(1000);
}
wifiMulti.addAP("realme1", "12345678");
wifiMulti.run();
if (wifiMulti.run() == WL_CONNECTED) {
Serial.println("");
Serial.println("WiFi connected");
Serial.println("IP address: ");
Serial.println(WiFi.localIP());
}
// server.begin();
lastValue = "0";
}
void loop() {
// wait for WiFi connection
if ((wifiMulti.run() == WL_CONNECTED)) {
String webUrl;
if (digitalRead(INPUT_PIN) == LOW) {
digitalWrite(LED_PIN, HIGH);
//digitalWrite(BUZZ_PIN,HIGH);
} else {
digitalWrite(LED_PIN, LOW);
// digitalWrite(BUZZ_PIN,LOW);
}
if (digitalRead(LED_PIN) == HIGH) {
if (lastValue == "0") {
webUrl = "https://iottest2022.000webhostapp.com/update.php?name=ledon&status=1";
updateServer(webUrl);
lastValue = "1";
}
} else {
if (lastValue == "1") {
webUrl = "https://iottest2022.000webhostapp.com/update.php?name=ledoff&status=0";
updateServer(webUrl);
lastValue = "0";
}
}
}
delay(100);
}
void updateServer(String webUrl) {
HTTPClient http;
Serial.print("[HTTP] begin...\n");
// configure traged server and url
http.begin(webUrl); //HTTP
Serial.print("[HTTP] GET...\n");
// start connection and send HTTP header
int httpCode = http.GET();
// httpCode will be negative on error
if (httpCode > 0) {
// HTTP header has been send and Server response header has been handled
Serial.printf("[HTTP] GET... code: %d\n", httpCode);
// file found at server
if (httpCode == HTTP_CODE_OK) {
String payload = http.getString();
Serial.println(payload);
}
} else {
Serial.printf("[HTTP] GET... failed, error: %s\n", http.errorToString(httpCode).c_str());
}
http.end();
}



#include "DHT.h"
#define DHTPIN 12
#define DHTTYPE DHT11
float hsum = 0, havg = 0, tsum = 0, tavg = 0;
int pullup = 10, led = 11;
float h, t;
int num_array[5][7] = {
{ 1, 0, 0, 1, 1, 1, 1 },
{ 0, 0, 1, 0, 0, 1, 0 },
{ 0, 0, 0, 0, 1, 1, 0 },
{ 1, 0, 0, 1, 1, 1, 0 },
{ 0, 1, 0, 0, 1, 0, 0 }
};
DHT dht(DHTPIN, DHT11);
void num_write(int);
void setup() {
pinMode(pullup, INPUT_PULLUP);
pinMode(led, OUTPUT);
pinMode(2, OUTPUT);
pinMode(3, OUTPUT);
pinMode(4, OUTPUT);
pinMode(6, OUTPUT);
pinMode(7, OUTPUT);
pinMode(8, OUTPUT);
pinMode(9, OUTPUT);
Serial.begin(9600);
}
void temp() {
for (int i = 0; i < 10; i++) {
h = dht.readHumidity();
Serial.print(h);
hsum += h;
t = dht.readTemperature();
Serial.print(t);
tsum += t;
delay(3000);
}
havg = hsum / 10;
tavg = tsum / 10;
Serial.println("Average of Temperature");
Serial.print(tavg);
Serial.println("Average of Humidity");
Serial.print(havg);
}
void num_write(int number) {
int pin = 2;
for (int k = 0; k < 7; k++) {
if (pin == 5) {
pin++;
}
digitalWrite(pin, num_array[number][k]);
pin++;
}
}
void counter() {
digitalWrite(led, LOW);
delay(2000);
for (int j = 5; j > 0; j--) {
delay(1000);
num_write(j - 1);
}
delay(3000);
temp();
exit;
}
void loop() {
if (digitalRead(pullup) == LOW) {
counter();
} else {
digitalWrite(led, HIGH);
}
}
